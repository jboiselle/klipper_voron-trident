# This file contains common pin mappings for the BIGTREETECH Manta M8P
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# See docs/Config_Reference.md for a description of parameters.
[include mainsail.cfg]
[include sb_leds.cfg]
[include nozzle_wipe.cfg]
[include speed_test.cfg]
[include aux_fan.cfg]

#####################################################################
# 	General & MCU Settings
#####################################################################

[mcu]
##	[X in MOTOR1] - B Motor
##	[Y in MOTOR2] - A Motor

## Manta M8P Motherboard
#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_41001B000D504B4633373520-if00
canbus_uuid: eea75d53c8d1
canbus_interface: can0

## SB2209 Toolhead
[mcu sb2209]
canbus_uuid: 87ad90449d07
canbus_interface: can0

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 12000
max_z_velocity: 15
max_z_accel: 350
square_corner_velocity: 15.0

[temperature_sensor Manta_M8P_v1.1]
sensor_type: temperature_mcu

# [temperature_sensor CB1_Pi]
# sensor_type: temperature_host

[temperature_sensor SB2209]
sensor_type: Generic 3950
sensor_pin: sb2209:gpio28

[temperature_sensor chamber]
sensor_type: PT1000
sensor_pin: PA1

[adxl345]
cs_pin: sb2209:gpio1
spi_software_sclk_pin: sb2209:gpio2
spi_software_mosi_pin: sb2209:gpio0
spi_software_miso_pin: sb2209:gpio3
axes_map: z,-y,x

[resonance_tester]
probe_points: 150, 150, 20
accel_chip: adxl345

[input_shaper]
shaper_freq_x: 54.2
shaper_type_x: zv
shaper_freq_y: 43.8
shaper_type_y: mzv

[exclude_object]
[gcode_arcs]

[idle_timeout]
gcode:
     {% if printer.webhooks.state|lower == 'ready' %}
          {% if printer.pause_resume.is_paused|lower == 'false' %}
               STATUS_OFF
               TURN_OFF_HEATERS
               SET_FAN_SPEED FAN=bento_box_filtration SPEED=0 # Turn off air filtration
               SET_PIN PIN=Chamber_Lighting VALUE=0 # Turn off chamber light
               M84
          {% else %}
               M104 S0
          {% endif %}
     {% endif %}
# 15 minute timeout
timeout: 900

[skew_correction] 

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE2
dir_pin: PB4
enable_pin: !PC11
microsteps: 16
# rotation_distance: 40
rotation_distance: 39.79 # CaliFlower
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: sb2209:gpio24
position_min: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
position_endstop: 300
position_max: 300

##	Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 50   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC10
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on Motor2 (A Motor)
[stepper_y]
step_pin: PF12
dir_pin: PF11
enable_pin: !PB3
microsteps: 16
# rotation_distance: 40
rotation_distance: 39.78 # CaliFlower
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^PF4
position_min: 0
##--------------------------------------------------------------------

##	Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
position_endstop: 300
position_max: 300

##	Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 50  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PF13
interpolate: True
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR3_A
[stepper_z]
step_pin: PD7
dir_pin: !PD6
enable_pin: !PF10
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4    
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
## All builds use same Max Z
position_max: 245
position_min: -2.5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PF9
interpolate: true
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear  on Motor5
[stepper_z1]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PD1
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PD0
interpolate: true
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Front Right on Motor6
[stepper_z2]
step_pin: PA10
dir_pin: !PA14
enable_pin: !PA15
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4  
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF8
interpolate: true
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Extruder
#####################################################################

[extruder]
step_pin: sb2209:gpio18
dir_pin: sb2209:gpio19
enable_pin: !sb2209:gpio17
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511
rotation_distance: 22.905740611 # calibrated 2024-04-21
max_extrude_only_distance: 100
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 50:10 for Stealthburner/Clockwork2
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10 # CW2
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.600 # changed to hardened steel 0.6mm 2025-01-01
filament_diameter: 1.75
heater_pin: sb2209:gpio7
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: sb2209:gpio27
min_temp: 10
max_temp: 300
max_power: 0.8 # Slightly limit power for Bambu X1/P1 hotend
min_extrude_temp: 185
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: sb2209:gpio20
#interpolate: false
run_current: 0.650
#sense_resistor: 0.110
stealthchop_threshold: 999999

#[filament_switch_sensor material_0]
#switch_pin: PC1

#[filament_switch_sensor material_1]
#switch_pin: PC2

#####################################################################
# 	Bed Mesh
#####################################################################

[bed_mesh]
speed: 250
horizontal_move_z: 5
mesh_min: 10, 10
mesh_max: 290, 290
probe_count: 5, 5
adaptive_margin: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin
heater_pin: PB5 
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PA0
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 1.0 # 4 ( 450 / 120 ) = 1.067
min_temp: 0
max_temp: 120
#pwm_cycle_time: 0.01667 
pwm_cycle_time: 0.008333 # Fix flickering lights for North America

#####################################################################
# 	Probe
#####################################################################

# [probe]
# ##	Inductive Probe
# ##	This probe is not used for Z height, only Quad Gantry Leveling
# ##  NPN and PNP proximity switch types can be set by jumper
# pin: PC0 #M4-STOP
# x_offset: 0
# y_offset: 25.0
# z_offset: 0
# speed: 10.0
# samples: 3
# samples_result: median
# sample_retract_dist: 3.0
# samples_tolerance: 0.006
# samples_tolerance_retries: 3

[probe]
##    Voron Tap
##    https://github.com/VoronDesign/Voron-Tap
pin: ^sb2209:gpio22
x_offset: 0
y_offset: 0
speed: 3.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
# 	Fan Control
#####################################################################

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: sb2209:gpio13
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin: sb2209:gpio14
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

# [fan_generic mcu_pi]
# pin: multi_pin:electronics_fans
# shutdown_speed: 0.0
# kick_start_time: 0.5
# off_below: 0.19

# [controller_fan controller_fan]
# pin: multi_pin:electronics_fans
# max_power: 1.0
# shutdown_speed: 0.0
# kick_start_time: 0.5
# off_below: 0.19
# heater: heater_bed
# stepper:
# fan_speed: 1.0
# idle_speed: 0.6
# idle_timeout: 180

[controller_fan stepper_fan]
pin: PE5
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 0.5
off_below: 0.19
heater:
stepper: stepper_y, stepper_x, stepper_z, stepper_z1, stepper_z2
fan_speed: 1.0
idle_speed: 0.6
idle_timeout: 60

# [heater_fan bento_box_filtration]
# #	Exhaust fan - CNC_FAN3
# pin: PE4
# max_power: 1.0
# shutdown_speed: 0.0
# kick_start_time: 5.0
# heater: heater_bed
# heater_temp: 90
# fan_speed: 1.0

[temperature_fan CB1_Pi]
sensor_type: temperature_host
pin: PE0
max_temp: 80.0
target_temp: 45.0
min_temp: 0
shutdown_speed: 0.0
kick_start_time: 0.5
off_below: 0.19
max_speed: 1.0
min_speed: 0.0
control: pid
pid_Kp: 2.0
pid_Ki: 5.0
pid_Kd: 0.5
pid_deriv_time: 2.0

[fan_generic bento_box_filtration]
pin: PE6
kick_start_time: 0.5
off_below: 0.19

#####################################################################
# 	LED Control
#####################################################################

[output_pin Chamber_Lighting]
# Chamber Lighting
pin: PE3
pwm: true
shutdown_value: 0
value: 0
cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position: 150,150
speed: 200
z_hop: 8

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

##--------------------------------------------------------------------
## Uncomment below for 250mm build
#z_positions:
#    -50, 18
#    125, 298
#    300, 18
#points:
#    30, 5
#    125, 195
#    220, 5

## Uncomment below for 300mm build
z_positions:
   -50, 18
   150, 348
   350, 18
points:
   30, 5
   150, 245
   270, 5

## Uncomment below for 350mm build
#z_positions:
#   -50, 18
#   175, 398
#   400, 18
#points:
#   30, 5
#   175, 295
#   320, 5


##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

########################################
# EXP1 / EXP2 (display) pins
########################################

# [board_pins]
# aliases:
#     # EXP1 header
#     EXP1_1=PE9, EXP1_2=PE10,
#     EXP1_3=PE11, EXP1_4=PE12,
#     EXP1_5=PE13, EXP1_6=PE14,    # Slot in the socket on this side
#     EXP1_7=PE15, EXP1_8=PB10,
#     EXP1_9=<GND>, EXP1_10=<5V>,

#     # EXP2 header
#     EXP2_1=PB14, EXP2_2=PB13,
#     EXP2_3=PF7, EXP2_4=PB12,
#     EXP2_5=PE7, EXP2_6=PB11,      # Slot in the socket on this side
#     EXP2_7=PE8, EXP2_8=<RST>,
#     EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

# [display]
# #	mini12864 LCD Display
# lcd_type: uc1701
# cs_pin: EXP1_3
# a0_pin: EXP1_4
# rst_pin: EXP1_5
# encoder_pins: ^EXP2_5, ^EXP2_3
# click_pin: ^!EXP1_2
# contrast: 63
# spi_software_miso_pin: EXP2_1
# spi_software_mosi_pin: EXP2_6
# spi_software_sclk_pin: EXP2_2

# [neopixel btt_mini12864]
# #	To control Neopixel RGB in mini12864 display
# pin: EXP1_6
# chain_count: 3
# initial_RED: 0.1
# initial_GREEN: 0.5
# initial_BLUE: 0.0
# color_order: RGB

#--------------------------------------------------------------------


#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    Z_TILT_ADJUST
    G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##	Uncomment for 300 build
    G0 X150 Y150 Z30 F3600
    
    ##	Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
   
# [gcode_macro PRINT_START]
# #   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# gcode:
#     G32                            ; home all axes
#     G1 Z20 F3000                   ; move nozzle away from bed

#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("0")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_DISPLAY_TEXT MSG="Printing started" 
  # Turn on MCU & Pi cooling fans
  #SET_FAN_SPEED FAN=mcu_pi SPEED=1
  
  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    SET_FAN_SPEED FAN=bento_box_filtration SPEED=1
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    ## Turn on aux fans to promote air circulation until chamber temp
    M106 P2 S100

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
    M106 P2 S0 # Turn off aux fans

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 2min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 2min"                # Displays info
    G4 S120                                             # Waits 2 min for the bedtemp to stabilize
    #G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c

  # Nozzle wipe
  SET_DISPLAY_TEXT MSG="Cleaning nozzle" 
  STATUS_CLEANING
  NOZZLE_WIPE
  G28 Z

  #  Uncomment for Trident (Z_TILT_ADJUST)
  SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  G28 Z                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  #SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  #STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  #quad_gantry_level               # Levels the buildplate via QGL
  #G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  BED_MESH_CALIBRATE ADAPTIVE=1      # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Purge line"                # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    M84                            ; turn off steppers
    STATUS_READY                   ; Set LEDs to ready mode
    #SET_FAN_SPEED FAN=mcu_pi SPEED=0 ; turn off MCU & Pi cooling fans
    
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 63.967
#*# pid_ki = 2.716
#*# pid_kd = 376.608
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 36.125
#*# pid_ki = 9.634
#*# pid_kd = 33.867
#*#
#*# [probe]
#*# z_offset = -0.560
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.009681, 0.015319, -0.004681, 0.025944, 0.010319
#*# 	0.069069, 0.067819, 0.037194, 0.067819, 0.005944
#*# 	0.069694, 0.039069, 0.015319, 0.026569, -0.054056
#*# 	0.047194, 0.031569, -0.004681, -0.029681, -0.089056
#*# 	0.060944, 0.020319, -0.035306, -0.030306, -0.111556
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 290.0
#*# min_y = 10.0
#*# max_y = 290.0
#*#
#*# [skew_correction CaliFlower]
#*# xy_skew = -0.0025131983300733384
#*# xz_skew = 0.0
#*# yz_skew = 0.0
